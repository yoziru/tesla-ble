/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9.1 */

#ifndef PB_SIGNATURES_SIGNATURES_PB_H_INCLUDED
#define PB_SIGNATURES_SIGNATURES_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _Signatures_Tag {
    Signatures_Tag_TAG_SIGNATURE_TYPE = 0,
    Signatures_Tag_TAG_DOMAIN = 1,
    Signatures_Tag_TAG_PERSONALIZATION = 2,
    Signatures_Tag_TAG_EPOCH = 3,
    Signatures_Tag_TAG_EXPIRES_AT = 4,
    Signatures_Tag_TAG_COUNTER = 5,
    Signatures_Tag_TAG_CHALLENGE = 6,
    Signatures_Tag_TAG_FLAGS = 7,
    Signatures_Tag_TAG_REQUEST_HASH = 8,
    Signatures_Tag_TAG_FAULT = 9,
    Signatures_Tag_TAG_END = 255
} Signatures_Tag;

typedef enum _Signatures_SignatureType {
    Signatures_SignatureType_SIGNATURE_TYPE_AES_GCM = 0,
    Signatures_SignatureType_SIGNATURE_TYPE_AES_GCM_PERSONALIZED = 5,
    Signatures_SignatureType_SIGNATURE_TYPE_HMAC = 6,
    Signatures_SignatureType_SIGNATURE_TYPE_HMAC_PERSONALIZED = 8,
    Signatures_SignatureType_SIGNATURE_TYPE_AES_GCM_RESPONSE = 9
} Signatures_SignatureType;

typedef enum _Signatures_Session_Info_Status {
    Signatures_Session_Info_Status_SESSION_INFO_STATUS_OK = 0,
    Signatures_Session_Info_Status_SESSION_INFO_STATUS_KEY_NOT_ON_WHITELIST = 1
} Signatures_Session_Info_Status;

/* Struct definitions */
typedef PB_BYTES_ARRAY_T(65) Signatures_KeyIdentity_public_key_t;
typedef struct _Signatures_KeyIdentity {
    pb_size_t which_identity_type;
    union {
        Signatures_KeyIdentity_public_key_t public_key;
        uint32_t handle;
    } identity_type;
} Signatures_KeyIdentity;

typedef struct _Signatures_AES_GCM_Personalized_Signature_Data {
    pb_byte_t epoch[16];
    pb_byte_t nonce[12];
    uint32_t counter;
    uint32_t expires_at;
    pb_byte_t tag[16];
} Signatures_AES_GCM_Personalized_Signature_Data;

typedef struct _Signatures_AES_GCM_Response_Signature_Data {
    pb_byte_t nonce[12];
    uint32_t counter;
    pb_byte_t tag[16];
} Signatures_AES_GCM_Response_Signature_Data;

typedef PB_BYTES_ARRAY_T(34) Signatures_HMAC_Signature_Data_tag_t;
typedef struct _Signatures_HMAC_Signature_Data {
    Signatures_HMAC_Signature_Data_tag_t tag;
} Signatures_HMAC_Signature_Data;

typedef struct _Signatures_HMAC_Personalized_Signature_Data {
    pb_byte_t epoch[16];
    uint32_t counter;
    uint32_t expires_at;
    pb_byte_t tag[16];
} Signatures_HMAC_Personalized_Signature_Data;

typedef struct _Signatures_SignatureData {
    bool has_signer_identity;
    Signatures_KeyIdentity signer_identity;
    pb_size_t which_sig_type;
    union {
        Signatures_AES_GCM_Personalized_Signature_Data AES_GCM_Personalized_data;
        Signatures_HMAC_Signature_Data session_info_tag;
        Signatures_HMAC_Personalized_Signature_Data HMAC_Personalized_data;
        Signatures_AES_GCM_Response_Signature_Data AES_GCM_Response_data;
    } sig_type;
} Signatures_SignatureData;

typedef struct _Signatures_GetSessionInfoRequest {
    bool has_key_identity;
    Signatures_KeyIdentity key_identity;
} Signatures_GetSessionInfoRequest;

typedef PB_BYTES_ARRAY_T(65) Signatures_SessionInfo_publicKey_t;
typedef struct _Signatures_SessionInfo {
    uint32_t counter;
    Signatures_SessionInfo_publicKey_t publicKey;
    pb_byte_t epoch[16];
    uint32_t clock_time;
    Signatures_Session_Info_Status status;
    uint32_t handle;
} Signatures_SessionInfo;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _Signatures_Tag_MIN Signatures_Tag_TAG_SIGNATURE_TYPE
#define _Signatures_Tag_MAX Signatures_Tag_TAG_END
#define _Signatures_Tag_ARRAYSIZE ((Signatures_Tag)(Signatures_Tag_TAG_END+1))

#define _Signatures_SignatureType_MIN Signatures_SignatureType_SIGNATURE_TYPE_AES_GCM
#define _Signatures_SignatureType_MAX Signatures_SignatureType_SIGNATURE_TYPE_AES_GCM_RESPONSE
#define _Signatures_SignatureType_ARRAYSIZE ((Signatures_SignatureType)(Signatures_SignatureType_SIGNATURE_TYPE_AES_GCM_RESPONSE+1))

#define _Signatures_Session_Info_Status_MIN Signatures_Session_Info_Status_SESSION_INFO_STATUS_OK
#define _Signatures_Session_Info_Status_MAX Signatures_Session_Info_Status_SESSION_INFO_STATUS_KEY_NOT_ON_WHITELIST
#define _Signatures_Session_Info_Status_ARRAYSIZE ((Signatures_Session_Info_Status)(Signatures_Session_Info_Status_SESSION_INFO_STATUS_KEY_NOT_ON_WHITELIST+1))








#define Signatures_SessionInfo_status_ENUMTYPE Signatures_Session_Info_Status


/* Initializer values for message structs */
#define Signatures_KeyIdentity_init_default      {0, {{0, {0}}}}
#define Signatures_AES_GCM_Personalized_Signature_Data_init_default {{0}, {0}, 0, 0, {0}}
#define Signatures_AES_GCM_Response_Signature_Data_init_default {{0}, 0, {0}}
#define Signatures_HMAC_Signature_Data_init_default {{0, {0}}}
#define Signatures_HMAC_Personalized_Signature_Data_init_default {{0}, 0, 0, {0}}
#define Signatures_SignatureData_init_default    {false, Signatures_KeyIdentity_init_default, 0, {Signatures_AES_GCM_Personalized_Signature_Data_init_default}}
#define Signatures_GetSessionInfoRequest_init_default {false, Signatures_KeyIdentity_init_default}
#define Signatures_SessionInfo_init_default      {0, {0, {0}}, {0}, 0, _Signatures_Session_Info_Status_MIN, 0}
#define Signatures_KeyIdentity_init_zero         {0, {{0, {0}}}}
#define Signatures_AES_GCM_Personalized_Signature_Data_init_zero {{0}, {0}, 0, 0, {0}}
#define Signatures_AES_GCM_Response_Signature_Data_init_zero {{0}, 0, {0}}
#define Signatures_HMAC_Signature_Data_init_zero {{0, {0}}}
#define Signatures_HMAC_Personalized_Signature_Data_init_zero {{0}, 0, 0, {0}}
#define Signatures_SignatureData_init_zero       {false, Signatures_KeyIdentity_init_zero, 0, {Signatures_AES_GCM_Personalized_Signature_Data_init_zero}}
#define Signatures_GetSessionInfoRequest_init_zero {false, Signatures_KeyIdentity_init_zero}
#define Signatures_SessionInfo_init_zero         {0, {0, {0}}, {0}, 0, _Signatures_Session_Info_Status_MIN, 0}

/* Field tags (for use in manual encoding/decoding) */
#define Signatures_KeyIdentity_public_key_tag    1
#define Signatures_KeyIdentity_handle_tag        3
#define Signatures_AES_GCM_Personalized_Signature_Data_epoch_tag 1
#define Signatures_AES_GCM_Personalized_Signature_Data_nonce_tag 2
#define Signatures_AES_GCM_Personalized_Signature_Data_counter_tag 3
#define Signatures_AES_GCM_Personalized_Signature_Data_expires_at_tag 4
#define Signatures_AES_GCM_Personalized_Signature_Data_tag_tag 5
#define Signatures_AES_GCM_Response_Signature_Data_nonce_tag 1
#define Signatures_AES_GCM_Response_Signature_Data_counter_tag 2
#define Signatures_AES_GCM_Response_Signature_Data_tag_tag 3
#define Signatures_HMAC_Signature_Data_tag_tag   1
#define Signatures_HMAC_Personalized_Signature_Data_epoch_tag 1
#define Signatures_HMAC_Personalized_Signature_Data_counter_tag 2
#define Signatures_HMAC_Personalized_Signature_Data_expires_at_tag 3
#define Signatures_HMAC_Personalized_Signature_Data_tag_tag 4
#define Signatures_SignatureData_signer_identity_tag 1
#define Signatures_SignatureData_AES_GCM_Personalized_data_tag 5
#define Signatures_SignatureData_session_info_tag_tag 6
#define Signatures_SignatureData_HMAC_Personalized_data_tag 8
#define Signatures_SignatureData_AES_GCM_Response_data_tag 9
#define Signatures_GetSessionInfoRequest_key_identity_tag 1
#define Signatures_SessionInfo_counter_tag       1
#define Signatures_SessionInfo_publicKey_tag     2
#define Signatures_SessionInfo_epoch_tag         3
#define Signatures_SessionInfo_clock_time_tag    4
#define Signatures_SessionInfo_status_tag        5
#define Signatures_SessionInfo_handle_tag        6

/* Struct field encoding specification for nanopb */
#define Signatures_KeyIdentity_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    BYTES,    (identity_type,public_key,identity_type.public_key),   1) \
X(a, STATIC,   ONEOF,    UINT32,   (identity_type,handle,identity_type.handle),   3)
#define Signatures_KeyIdentity_CALLBACK NULL
#define Signatures_KeyIdentity_DEFAULT NULL

#define Signatures_AES_GCM_Personalized_Signature_Data_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FIXED_LENGTH_BYTES, epoch,             1) \
X(a, STATIC,   SINGULAR, FIXED_LENGTH_BYTES, nonce,             2) \
X(a, STATIC,   SINGULAR, UINT32,   counter,           3) \
X(a, STATIC,   SINGULAR, FIXED32,  expires_at,        4) \
X(a, STATIC,   SINGULAR, FIXED_LENGTH_BYTES, tag,               5)
#define Signatures_AES_GCM_Personalized_Signature_Data_CALLBACK NULL
#define Signatures_AES_GCM_Personalized_Signature_Data_DEFAULT NULL

#define Signatures_AES_GCM_Response_Signature_Data_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FIXED_LENGTH_BYTES, nonce,             1) \
X(a, STATIC,   SINGULAR, UINT32,   counter,           2) \
X(a, STATIC,   SINGULAR, FIXED_LENGTH_BYTES, tag,               3)
#define Signatures_AES_GCM_Response_Signature_Data_CALLBACK NULL
#define Signatures_AES_GCM_Response_Signature_Data_DEFAULT NULL

#define Signatures_HMAC_Signature_Data_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BYTES,    tag,               1)
#define Signatures_HMAC_Signature_Data_CALLBACK NULL
#define Signatures_HMAC_Signature_Data_DEFAULT NULL

#define Signatures_HMAC_Personalized_Signature_Data_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FIXED_LENGTH_BYTES, epoch,             1) \
X(a, STATIC,   SINGULAR, UINT32,   counter,           2) \
X(a, STATIC,   SINGULAR, FIXED32,  expires_at,        3) \
X(a, STATIC,   SINGULAR, FIXED_LENGTH_BYTES, tag,               4)
#define Signatures_HMAC_Personalized_Signature_Data_CALLBACK NULL
#define Signatures_HMAC_Personalized_Signature_Data_DEFAULT NULL

#define Signatures_SignatureData_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  signer_identity,   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sig_type,AES_GCM_Personalized_data,sig_type.AES_GCM_Personalized_data),   5) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sig_type,session_info_tag,sig_type.session_info_tag),   6) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sig_type,HMAC_Personalized_data,sig_type.HMAC_Personalized_data),   8) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sig_type,AES_GCM_Response_data,sig_type.AES_GCM_Response_data),   9)
#define Signatures_SignatureData_CALLBACK NULL
#define Signatures_SignatureData_DEFAULT NULL
#define Signatures_SignatureData_signer_identity_MSGTYPE Signatures_KeyIdentity
#define Signatures_SignatureData_sig_type_AES_GCM_Personalized_data_MSGTYPE Signatures_AES_GCM_Personalized_Signature_Data
#define Signatures_SignatureData_sig_type_session_info_tag_MSGTYPE Signatures_HMAC_Signature_Data
#define Signatures_SignatureData_sig_type_HMAC_Personalized_data_MSGTYPE Signatures_HMAC_Personalized_Signature_Data
#define Signatures_SignatureData_sig_type_AES_GCM_Response_data_MSGTYPE Signatures_AES_GCM_Response_Signature_Data

#define Signatures_GetSessionInfoRequest_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  key_identity,      1)
#define Signatures_GetSessionInfoRequest_CALLBACK NULL
#define Signatures_GetSessionInfoRequest_DEFAULT NULL
#define Signatures_GetSessionInfoRequest_key_identity_MSGTYPE Signatures_KeyIdentity

#define Signatures_SessionInfo_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   counter,           1) \
X(a, STATIC,   SINGULAR, BYTES,    publicKey,         2) \
X(a, STATIC,   SINGULAR, FIXED_LENGTH_BYTES, epoch,             3) \
X(a, STATIC,   SINGULAR, FIXED32,  clock_time,        4) \
X(a, STATIC,   SINGULAR, UENUM,    status,            5) \
X(a, STATIC,   SINGULAR, UINT32,   handle,            6)
#define Signatures_SessionInfo_CALLBACK NULL
#define Signatures_SessionInfo_DEFAULT NULL

extern const pb_msgdesc_t Signatures_KeyIdentity_msg;
extern const pb_msgdesc_t Signatures_AES_GCM_Personalized_Signature_Data_msg;
extern const pb_msgdesc_t Signatures_AES_GCM_Response_Signature_Data_msg;
extern const pb_msgdesc_t Signatures_HMAC_Signature_Data_msg;
extern const pb_msgdesc_t Signatures_HMAC_Personalized_Signature_Data_msg;
extern const pb_msgdesc_t Signatures_SignatureData_msg;
extern const pb_msgdesc_t Signatures_GetSessionInfoRequest_msg;
extern const pb_msgdesc_t Signatures_SessionInfo_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Signatures_KeyIdentity_fields &Signatures_KeyIdentity_msg
#define Signatures_AES_GCM_Personalized_Signature_Data_fields &Signatures_AES_GCM_Personalized_Signature_Data_msg
#define Signatures_AES_GCM_Response_Signature_Data_fields &Signatures_AES_GCM_Response_Signature_Data_msg
#define Signatures_HMAC_Signature_Data_fields &Signatures_HMAC_Signature_Data_msg
#define Signatures_HMAC_Personalized_Signature_Data_fields &Signatures_HMAC_Personalized_Signature_Data_msg
#define Signatures_SignatureData_fields &Signatures_SignatureData_msg
#define Signatures_GetSessionInfoRequest_fields &Signatures_GetSessionInfoRequest_msg
#define Signatures_SessionInfo_fields &Signatures_SessionInfo_msg

/* Maximum encoded size of messages (where known) */
#define SIGNATURES_SIGNATURES_PB_H_MAX_SIZE      Signatures_SignatureData_size
#define Signatures_AES_GCM_Personalized_Signature_Data_size 61
#define Signatures_AES_GCM_Response_Signature_Data_size 38
#define Signatures_GetSessionInfoRequest_size    69
#define Signatures_HMAC_Personalized_Signature_Data_size 47
#define Signatures_HMAC_Signature_Data_size      36
#define Signatures_KeyIdentity_size              67
#define Signatures_SessionInfo_size              104
#define Signatures_SignatureData_size            132

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
