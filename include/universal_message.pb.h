/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9.1 */

#ifndef PB_UNIVERSALMESSAGE_UNIVERSAL_MESSAGE_PB_H_INCLUDED
#define PB_UNIVERSALMESSAGE_UNIVERSAL_MESSAGE_PB_H_INCLUDED
#include <pb.h>
#include "signatures.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _UniversalMessage_Domain {
    UniversalMessage_Domain_DOMAIN_BROADCAST = 0,
    UniversalMessage_Domain_DOMAIN_VEHICLE_SECURITY = 2,
    UniversalMessage_Domain_DOMAIN_INFOTAINMENT = 3
} UniversalMessage_Domain;

typedef enum _UniversalMessage_OperationStatus_E {
    UniversalMessage_OperationStatus_E_OPERATIONSTATUS_OK = 0,
    UniversalMessage_OperationStatus_E_OPERATIONSTATUS_WAIT = 1,
    UniversalMessage_OperationStatus_E_OPERATIONSTATUS_ERROR = 2
} UniversalMessage_OperationStatus_E;

typedef enum _UniversalMessage_MessageFault_E {
    UniversalMessage_MessageFault_E_MESSAGEFAULT_ERROR_NONE = 0, /* Request succeeded. */
    UniversalMessage_MessageFault_E_MESSAGEFAULT_ERROR_BUSY = 1, /* Required vehicle subsystem is busy. Try again. */
    UniversalMessage_MessageFault_E_MESSAGEFAULT_ERROR_TIMEOUT = 2, /* Vehicle subsystem did not respond. Try again. */
    UniversalMessage_MessageFault_E_MESSAGEFAULT_ERROR_UNKNOWN_KEY_ID = 3, /* Vehicle did not recognize the key used to authorize command. Make sure your key is paired with the vehicle. */
    UniversalMessage_MessageFault_E_MESSAGEFAULT_ERROR_INACTIVE_KEY = 4, /* Key used to authorize command has been disabled. */
    UniversalMessage_MessageFault_E_MESSAGEFAULT_ERROR_INVALID_SIGNATURE = 5, /* Command signature/MAC is incorrect. Use included session info to update session and try again. */
    UniversalMessage_MessageFault_E_MESSAGEFAULT_ERROR_INVALID_TOKEN_OR_COUNTER = 6, /* Command anti-replay counter has been used before. Use included session info to update session and try again. */
    UniversalMessage_MessageFault_E_MESSAGEFAULT_ERROR_INSUFFICIENT_PRIVILEGES = 7, /* User is not authorized to execute command. This can be because of the role or because of vehicle state. */
    UniversalMessage_MessageFault_E_MESSAGEFAULT_ERROR_INVALID_DOMAINS = 8, /* Command was malformed or addressed to an unrecognized vehicle system. May indicate client error or older vehicle firmware. */
    UniversalMessage_MessageFault_E_MESSAGEFAULT_ERROR_INVALID_COMMAND = 9, /* Unrecognized command. May indicate client error or unsupported vehicle firmware. */
    UniversalMessage_MessageFault_E_MESSAGEFAULT_ERROR_DECODING = 10, /* Could not parse command. Indicates client error. */
    UniversalMessage_MessageFault_E_MESSAGEFAULT_ERROR_INTERNAL = 11, /* Internal vehicle error. Try again. Most commonly encountered when the vehicle has not finished booting. */
    UniversalMessage_MessageFault_E_MESSAGEFAULT_ERROR_WRONG_PERSONALIZATION = 12, /* Command sent to wrong VIN. */
    UniversalMessage_MessageFault_E_MESSAGEFAULT_ERROR_BAD_PARAMETER = 13, /* Command was malformed or used a deprecated parameter. */
    UniversalMessage_MessageFault_E_MESSAGEFAULT_ERROR_KEYCHAIN_IS_FULL = 14, /* Vehicle's keychain is full. You must delete a key before you can add another. */
    UniversalMessage_MessageFault_E_MESSAGEFAULT_ERROR_INCORRECT_EPOCH = 15, /* Session ID mismatch. Use included session info to update session and try again. */
    UniversalMessage_MessageFault_E_MESSAGEFAULT_ERROR_IV_INCORRECT_LENGTH = 16, /* Initialization Value length is incorrect (AES-GCM must use 12-byte IVs). Indicates a client programming error. */
    UniversalMessage_MessageFault_E_MESSAGEFAULT_ERROR_TIME_EXPIRED = 17, /* Command expired. Use included session info to determine if clocks have desynchronized and try again. */
    UniversalMessage_MessageFault_E_MESSAGEFAULT_ERROR_NOT_PROVISIONED_WITH_IDENTITY = 18, /* Vehicle has not been provisioned with a VIN and may require service. */
    UniversalMessage_MessageFault_E_MESSAGEFAULT_ERROR_COULD_NOT_HASH_METADATA = 19, /* Internal vehicle error. */
    UniversalMessage_MessageFault_E_MESSAGEFAULT_ERROR_TIME_TO_LIVE_TOO_LONG = 20, /* Vehicle rejected command because its expiration time was too far in the future. This is a security precaution. */
    UniversalMessage_MessageFault_E_MESSAGEFAULT_ERROR_REMOTE_ACCESS_DISABLED = 21, /* The vehicle owner has disabled Mobile access. */
    UniversalMessage_MessageFault_E_MESSAGEFAULT_ERROR_REMOTE_SERVICE_ACCESS_DISABLED = 22, /* The command was authorized with a Service key, but the vehicle has not been configured to permit remote service commands. */
    UniversalMessage_MessageFault_E_MESSAGEFAULT_ERROR_COMMAND_REQUIRES_ACCOUNT_CREDENTIALS = 23, /* The command requires proof of Tesla account credentials but was not sent over a channel that provides this proof. Resend the command using Fleet API. */
    UniversalMessage_MessageFault_E_MESSAGEFAULT_ERROR_REQUEST_MTU_EXCEEDED = 24, /* Client sent a request with a field that exceeds MTU */
    UniversalMessage_MessageFault_E_MESSAGEFAULT_ERROR_RESPONSE_MTU_EXCEEDED = 25, /* Client's request was received, but response size exceeded MTU */
    UniversalMessage_MessageFault_E_MESSAGEFAULT_ERROR_REPEATED_COUNTER = 26,
    UniversalMessage_MessageFault_E_MESSAGEFAULT_ERROR_INVALID_KEY_HANDLE = 27,
    UniversalMessage_MessageFault_E_MESSAGEFAULT_ERROR_REQUIRES_RESPONSE_ENCRYPTION = 28
} UniversalMessage_MessageFault_E;

typedef enum _UniversalMessage_Flags {
    UniversalMessage_Flags_FLAG_USER_COMMAND = 0,
    UniversalMessage_Flags_FLAG_ENCRYPT_RESPONSE = 1
} UniversalMessage_Flags;

/* Struct definitions */
typedef PB_BYTES_ARRAY_T(16) UniversalMessage_Destination_routing_address_t;
typedef struct _UniversalMessage_Destination {
    pb_size_t which_sub_destination;
    union {
        UniversalMessage_Domain domain;
        UniversalMessage_Destination_routing_address_t routing_address;
    } sub_destination;
} UniversalMessage_Destination;

typedef struct _UniversalMessage_MessageStatus {
    UniversalMessage_OperationStatus_E operation_status;
    UniversalMessage_MessageFault_E signed_message_fault;
} UniversalMessage_MessageStatus;

typedef PB_BYTES_ARRAY_T(65) UniversalMessage_SessionInfoRequest_public_key_t;
typedef PB_BYTES_ARRAY_T(32) UniversalMessage_SessionInfoRequest_challenge_t;
typedef struct _UniversalMessage_SessionInfoRequest {
    UniversalMessage_SessionInfoRequest_public_key_t public_key;
    UniversalMessage_SessionInfoRequest_challenge_t challenge;
} UniversalMessage_SessionInfoRequest;

typedef PB_BYTES_ARRAY_T(512) UniversalMessage_RoutableMessage_protobuf_message_as_bytes_t;
typedef PB_BYTES_ARRAY_T(100) UniversalMessage_RoutableMessage_session_info_t;
typedef PB_BYTES_ARRAY_T(16) UniversalMessage_RoutableMessage_request_uuid_t;
typedef PB_BYTES_ARRAY_T(16) UniversalMessage_RoutableMessage_uuid_t;
typedef struct _UniversalMessage_RoutableMessage {
    bool has_to_destination;
    UniversalMessage_Destination to_destination;
    bool has_from_destination;
    UniversalMessage_Destination from_destination;
    pb_size_t which_payload;
    union {
        UniversalMessage_RoutableMessage_protobuf_message_as_bytes_t protobuf_message_as_bytes;
        UniversalMessage_SessionInfoRequest session_info_request;
        UniversalMessage_RoutableMessage_session_info_t session_info;
    } payload;
    bool has_signedMessageStatus;
    UniversalMessage_MessageStatus signedMessageStatus;
    pb_size_t which_sub_sigData;
    union {
        Signatures_SignatureData signature_data;
    } sub_sigData;
    UniversalMessage_RoutableMessage_request_uuid_t request_uuid;
    UniversalMessage_RoutableMessage_uuid_t uuid;
    uint32_t flags;
} UniversalMessage_RoutableMessage;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _UniversalMessage_Domain_MIN UniversalMessage_Domain_DOMAIN_BROADCAST
#define _UniversalMessage_Domain_MAX UniversalMessage_Domain_DOMAIN_INFOTAINMENT
#define _UniversalMessage_Domain_ARRAYSIZE ((UniversalMessage_Domain)(UniversalMessage_Domain_DOMAIN_INFOTAINMENT+1))

#define _UniversalMessage_OperationStatus_E_MIN UniversalMessage_OperationStatus_E_OPERATIONSTATUS_OK
#define _UniversalMessage_OperationStatus_E_MAX UniversalMessage_OperationStatus_E_OPERATIONSTATUS_ERROR
#define _UniversalMessage_OperationStatus_E_ARRAYSIZE ((UniversalMessage_OperationStatus_E)(UniversalMessage_OperationStatus_E_OPERATIONSTATUS_ERROR+1))

#define _UniversalMessage_MessageFault_E_MIN UniversalMessage_MessageFault_E_MESSAGEFAULT_ERROR_NONE
#define _UniversalMessage_MessageFault_E_MAX UniversalMessage_MessageFault_E_MESSAGEFAULT_ERROR_REQUIRES_RESPONSE_ENCRYPTION
#define _UniversalMessage_MessageFault_E_ARRAYSIZE ((UniversalMessage_MessageFault_E)(UniversalMessage_MessageFault_E_MESSAGEFAULT_ERROR_REQUIRES_RESPONSE_ENCRYPTION+1))

#define _UniversalMessage_Flags_MIN UniversalMessage_Flags_FLAG_USER_COMMAND
#define _UniversalMessage_Flags_MAX UniversalMessage_Flags_FLAG_ENCRYPT_RESPONSE
#define _UniversalMessage_Flags_ARRAYSIZE ((UniversalMessage_Flags)(UniversalMessage_Flags_FLAG_ENCRYPT_RESPONSE+1))

#define UniversalMessage_Destination_sub_destination_domain_ENUMTYPE UniversalMessage_Domain

#define UniversalMessage_MessageStatus_operation_status_ENUMTYPE UniversalMessage_OperationStatus_E
#define UniversalMessage_MessageStatus_signed_message_fault_ENUMTYPE UniversalMessage_MessageFault_E




/* Initializer values for message structs */
#define UniversalMessage_Destination_init_default {0, {_UniversalMessage_Domain_MIN}}
#define UniversalMessage_MessageStatus_init_default {_UniversalMessage_OperationStatus_E_MIN, _UniversalMessage_MessageFault_E_MIN}
#define UniversalMessage_SessionInfoRequest_init_default {{0, {0}}, {0, {0}}}
#define UniversalMessage_RoutableMessage_init_default {false, UniversalMessage_Destination_init_default, false, UniversalMessage_Destination_init_default, 0, {{0, {0}}}, false, UniversalMessage_MessageStatus_init_default, 0, {Signatures_SignatureData_init_default}, {0, {0}}, {0, {0}}, 0}
#define UniversalMessage_Destination_init_zero   {0, {_UniversalMessage_Domain_MIN}}
#define UniversalMessage_MessageStatus_init_zero {_UniversalMessage_OperationStatus_E_MIN, _UniversalMessage_MessageFault_E_MIN}
#define UniversalMessage_SessionInfoRequest_init_zero {{0, {0}}, {0, {0}}}
#define UniversalMessage_RoutableMessage_init_zero {false, UniversalMessage_Destination_init_zero, false, UniversalMessage_Destination_init_zero, 0, {{0, {0}}}, false, UniversalMessage_MessageStatus_init_zero, 0, {Signatures_SignatureData_init_zero}, {0, {0}}, {0, {0}}, 0}

/* Field tags (for use in manual encoding/decoding) */
#define UniversalMessage_Destination_domain_tag  1
#define UniversalMessage_Destination_routing_address_tag 2
#define UniversalMessage_MessageStatus_operation_status_tag 1
#define UniversalMessage_MessageStatus_signed_message_fault_tag 2
#define UniversalMessage_SessionInfoRequest_public_key_tag 1
#define UniversalMessage_SessionInfoRequest_challenge_tag 2
#define UniversalMessage_RoutableMessage_to_destination_tag 6
#define UniversalMessage_RoutableMessage_from_destination_tag 7
#define UniversalMessage_RoutableMessage_protobuf_message_as_bytes_tag 10
#define UniversalMessage_RoutableMessage_session_info_request_tag 14
#define UniversalMessage_RoutableMessage_session_info_tag 15
#define UniversalMessage_RoutableMessage_signedMessageStatus_tag 12
#define UniversalMessage_RoutableMessage_signature_data_tag 13
#define UniversalMessage_RoutableMessage_request_uuid_tag 50
#define UniversalMessage_RoutableMessage_uuid_tag 51
#define UniversalMessage_RoutableMessage_flags_tag 52

/* Struct field encoding specification for nanopb */
#define UniversalMessage_Destination_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    UENUM,    (sub_destination,domain,sub_destination.domain),   1) \
X(a, STATIC,   ONEOF,    BYTES,    (sub_destination,routing_address,sub_destination.routing_address),   2)
#define UniversalMessage_Destination_CALLBACK NULL
#define UniversalMessage_Destination_DEFAULT NULL

#define UniversalMessage_MessageStatus_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    operation_status,   1) \
X(a, STATIC,   SINGULAR, UENUM,    signed_message_fault,   2)
#define UniversalMessage_MessageStatus_CALLBACK NULL
#define UniversalMessage_MessageStatus_DEFAULT NULL

#define UniversalMessage_SessionInfoRequest_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BYTES,    public_key,        1) \
X(a, STATIC,   SINGULAR, BYTES,    challenge,         2)
#define UniversalMessage_SessionInfoRequest_CALLBACK NULL
#define UniversalMessage_SessionInfoRequest_DEFAULT NULL

#define UniversalMessage_RoutableMessage_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  to_destination,    6) \
X(a, STATIC,   OPTIONAL, MESSAGE,  from_destination,   7) \
X(a, STATIC,   ONEOF,    BYTES,    (payload,protobuf_message_as_bytes,payload.protobuf_message_as_bytes),  10) \
X(a, STATIC,   OPTIONAL, MESSAGE,  signedMessageStatus,  12) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_sigData,signature_data,sub_sigData.signature_data),  13) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,session_info_request,payload.session_info_request),  14) \
X(a, STATIC,   ONEOF,    BYTES,    (payload,session_info,payload.session_info),  15) \
X(a, STATIC,   SINGULAR, BYTES,    request_uuid,     50) \
X(a, STATIC,   SINGULAR, BYTES,    uuid,             51) \
X(a, STATIC,   SINGULAR, UINT32,   flags,            52)
#define UniversalMessage_RoutableMessage_CALLBACK NULL
#define UniversalMessage_RoutableMessage_DEFAULT NULL
#define UniversalMessage_RoutableMessage_to_destination_MSGTYPE UniversalMessage_Destination
#define UniversalMessage_RoutableMessage_from_destination_MSGTYPE UniversalMessage_Destination
#define UniversalMessage_RoutableMessage_signedMessageStatus_MSGTYPE UniversalMessage_MessageStatus
#define UniversalMessage_RoutableMessage_sub_sigData_signature_data_MSGTYPE Signatures_SignatureData
#define UniversalMessage_RoutableMessage_payload_session_info_request_MSGTYPE UniversalMessage_SessionInfoRequest

extern const pb_msgdesc_t UniversalMessage_Destination_msg;
extern const pb_msgdesc_t UniversalMessage_MessageStatus_msg;
extern const pb_msgdesc_t UniversalMessage_SessionInfoRequest_msg;
extern const pb_msgdesc_t UniversalMessage_RoutableMessage_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define UniversalMessage_Destination_fields &UniversalMessage_Destination_msg
#define UniversalMessage_MessageStatus_fields &UniversalMessage_MessageStatus_msg
#define UniversalMessage_SessionInfoRequest_fields &UniversalMessage_SessionInfoRequest_msg
#define UniversalMessage_RoutableMessage_fields &UniversalMessage_RoutableMessage_msg

/* Maximum encoded size of messages (where known) */
#define UNIVERSALMESSAGE_UNIVERSAL_MESSAGE_PB_H_MAX_SIZE UniversalMessage_RoutableMessage_size
#define UniversalMessage_Destination_size        18
#define UniversalMessage_MessageStatus_size      4
#define UniversalMessage_RoutableMessage_size    741
#define UniversalMessage_SessionInfoRequest_size 101

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
